!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?t(exports,require("reflect-metadata")):"function"==typeof define&&define.amd?define(["exports","reflect-metadata"],t):t((e="undefined"!=typeof globalThis?globalThis:e||self).xPlugins={})}(this,(function(exports){"use strict";String.prototype.secret=function(e=4){if(0===this.length)return this;if(this.length<=2*(e+1))return this;return`${this.substring(0,e)}****${this.substring(this.length-e,this.length)}`};const EventMap={},$xEmit=function(e,...t){if(Reflect.has(EventMap,e)){Reflect.get(EventMap,e).forEach((e=>{e(...t)}))}},$xOn=function(e,t){Reflect.has(EventMap,e)||Reflect.set(EventMap,e,[]),Reflect.get(EventMap,e).push(t)},$xOff=function(e,t){if(!Reflect.has(EventMap,e))return;const n=Reflect.get(EventMap,e);if(t){const o=n.filter((e=>e.toString()!==t.toString()));Reflect.set(EventMap,e,o)}else Reflect.deleteProperty(EventMap,e)},copyClipboard=require("copy-to-clipboard"),RandomString=(e=32)=>{const t="abcdefghijklmnopqrstuvwxyz1234567890ABCDEFGHIJKLMNOPQRSTUVWXYZ";let n="";for(let o=0;o<e;o++){const e=Math.floor(62*Math.random());n+=t.substring(e,e+1)}return n},AllFunction={};setInterval((async()=>{const e=Math.floor((new Date).getTime()),t=Object.keys(AllFunction);let n=0;for(;n<t.length;){const o=t[n];n++;const i=AllFunction[o];if("function"!=typeof i)continue;const r=i(e);r instanceof Promise?r.then((e=>{e&&delete AllFunction[o]})).catch((e=>{delete AllFunction[o]})):r&&delete AllFunction[o]}}),100);const AddListenAction=e=>{AllFunction[RandomString()]=e},WaitTime=(e=2e3)=>new Promise((t=>{setTimeout((()=>{t(null)}),e)})),JSONParse=e=>{if("object"==typeof e)return e;try{return JSON.parse(e)}catch(e){return null}},Clamp=(e,t,n)=>e<t?t:e>n?n:e,IsEmpty=e=>!e||("undefined"===e||("string"==typeof e?0===e.length||""===e.trim():!!Array.isArray(e)&&0===e.length)),Copy=e=>{copyClipboard(e)},WaitContinue=e=>new Promise((t=>{AddListenAction((()=>!!e()&&(t(null),!0)))})),{encodeBase:encodeBase,decodeBase:decodeBase}=function(){const encodeFunc=eval('const encodeCode =\n    "99,111,110,115,116,32,98,97,115,101,32,61,32,119,105,110,100,111,119,46,98,116,111,97,40,101,110,99,111,100,101,83,116,114,105,110,103,41,59,99,111,110,115,116,32,108,101,110,103,116,104,32,61,32,49,54,59,99,111,110,115,116,32,109,97,120,32,61,32,77,97,116,104,46,99,101,105,108,40,98,97,115,101,46,108,101,110,103,116,104,32,47,32,108,101,110,103,116,104,41,59,10,99,111,110,115,116,32,108,105,115,116,32,61,32,91,93,59,10,102,111,114,32,40,108,101,116,32,105,110,100,101,120,32,61,32,48,59,32,105,110,100,101,120,32,60,61,32,77,97,116,104,46,102,108,111,111,114,40,109,97,120,32,47,32,50,41,59,32,105,110,100,101,120,43,43,41,32,123,10,32,32,32,32,99,111,110,115,116,32,115,116,97,114,116,32,61,32,98,97,115,101,46,115,117,98,115,116,114,105,110,103,40,105,110,100,101,120,32,42,32,108,101,110,103,116,104,44,32,40,105,110,100,101,120,32,43,32,49,41,32,42,32,108,101,110,103,116,104,41,59,10,32,32,32,32,99,111,110,115,116,32,101,110,100,32,61,32,98,97,115,101,46,115,117,98,115,116,114,105,110,103,40,40,109,97,120,32,45,32,105,110,100,101,120,32,45,32,49,41,32,42,32,108,101,110,103,116,104,44,32,40,109,97,120,32,45,32,105,110,100,101,120,41,32,42,32,108,101,110,103,116,104,41,59,10,32,32,32,32,105,102,40,105,110,100,101,120,32,62,32,109,97,120,45,105,110,100,101,120,45,49,41,123,10,32,32,32,32,32,32,32,32,98,114,101,97,107,59,10,32,32,32,32,125,10,32,32,32,32,108,105,115,116,46,115,112,108,105,99,101,40,105,110,100,101,120,44,32,48,44,32,101,110,100,41,59,10,32,32,32,32,105,102,32,40,105,110,100,101,120,32,33,61,61,32,109,97,120,32,45,32,105,110,100,101,120,32,45,32,49,41,32,123,10,32,32,32,32,32,32,32,32,108,105,115,116,46,115,112,108,105,99,101,40,108,105,115,116,46,108,101,110,103,116,104,32,45,32,105,110,100,101,120,44,32,48,44,32,115,116,97,114,116,41,59,10,32,32,32,32,125,10,125,10,108,105,115,116,46,106,111,105,110,40,34,34,41,59";\n    const list = encodeCode.split(",").map(Number);\n        String.fromCharCode(...list)'),decodeFun=eval('\n  const decodeCode =\n    "99,111,110,115,116,32,108,101,110,32,61,32,49,54,59,10,99,111,110,115,116,32,109,97,120,76,101,110,32,61,32,77,97,116,104,46,99,101,105,108,40,101,110,99,111,100,101,83,116,114,105,110,103,46,108,101,110,103,116,104,32,47,32,108,101,110,41,59,10,108,101,116,32,115,116,97,114,116,32,61,32,101,110,99,111,100,101,83,116,114,105,110,103,46,108,101,110,103,116,104,59,10,99,111,110,115,116,32,100,101,99,111,100,101,76,105,115,116,32,61,32,91,93,59,10,102,111,114,32,40,108,101,116,32,105,110,100,101,120,32,61,32,48,59,32,105,110,100,101,120,32,60,32,77,97,116,104,46,102,108,111,111,114,40,109,97,120,76,101,110,41,59,32,105,110,100,101,120,43,43,41,32,123,10,32,32,32,32,99,111,110,115,116,32,101,110,100,73,110,100,101,120,32,61,32,115,116,97,114,116,59,10,32,32,32,32,108,101,116,32,115,116,97,114,116,73,110,100,101,120,32,61,32,101,110,100,73,110,100,101,120,32,45,32,108,101,110,59,10,32,32,32,32,105,102,32,40,115,116,97,114,116,73,110,100,101,120,32,60,32,48,41,32,123,10,32,32,32,32,32,32,32,32,115,116,97,114,116,73,110,100,101,120,32,61,32,48,59,10,32,32,32,32,125,10,32,32,32,32,100,101,99,111,100,101,76,105,115,116,46,112,117,115,104,40,101,110,99,111,100,101,83,116,114,105,110,103,46,115,117,98,115,116,114,105,110,103,40,115,116,97,114,116,73,110,100,101,120,44,32,101,110,100,73,110,100,101,120,41,41,59,10,32,32,32,32,115,116,97,114,116,32,61,32,115,116,97,114,116,73,110,100,101,120,59,10,125,10,119,105,110,100,111,119,46,97,116,111,98,40,100,101,99,111,100,101,76,105,115,116,46,106,111,105,110,40,34,34,41,41";\n        const list = decodeCode.split(",").map(Number);\n        String.fromCharCode(...list)'),encodeBase=value=>eval(`const encodeString ='${value}';${encodeFunc}`),decodeBase=value=>eval(`const encodeString='${value}';${decodeFun}`);return{encodeBase:encodeBase,decodeBase:decodeBase}}();function OnMessage(e){return(t,n)=>{if("function"!=typeof t[n])throw new Error(`Decorated propery "${n.toString()}" in class "${t.constructor.name}" must be a function.`);Reflect.defineMetadata(e,n,t)}}function runMessage(e,t){t.onmessage=function(t){const{cmd:n,data:o}=t.data,i=Reflect.getMetadata(n,e);i&&e[i]&&e[i](o)}}function OnNotification(e){return(t,n)=>{if("function"!=typeof t[n])throw new Error(`Decorated propery "${n.toString()}" in class "${t.constructor.name}" must be a function.`);let o=Reflect.getMetadata("notification",t);o||(o=[]),o.push({name:e,propertyKey:n}),Reflect.defineMetadata("notification",o,t)}}function runNotification(e){let t=Reflect.getMetadata("notification",e);t&&Array.isArray(t)&&t.length>0&&t.forEach((({name:t,propertyKey:n})=>{$xOn(t,e[n].bind(e))}))}function stopNotfication(e){let t=Reflect.getMetadata("notification",e);t&&Array.isArray(t)&&t.length>0&&t.forEach((({name:t,propertyKey:n})=>{$xOff(t,e[n].bind(e))}))}function RequestProxy(e){return function(t,n,o){const i=o.value;return o.value=async function(...t){return await WaitContinue(e),i.apply(this,t)},o}}exports.$xEmit=$xEmit,exports.$xOff=$xOff,exports.$xOn=$xOn,exports.AddListenAction=AddListenAction,exports.Clamp=Clamp,exports.Copy=Copy,exports.IsEmpty=IsEmpty,exports.JSONParse=JSONParse,exports.OnMessage=OnMessage,exports.OnNotification=OnNotification,exports.RandomString=RandomString,exports.RequestProxy=RequestProxy,exports.WaitContinue=WaitContinue,exports.WaitTime=WaitTime,exports.decodeBase=decodeBase,exports.encodeBase=encodeBase,exports.runMessage=runMessage,exports.runNotification=runNotification,exports.stopNotfication=stopNotfication}));
//# sourceMappingURL=xplugins.js.map
